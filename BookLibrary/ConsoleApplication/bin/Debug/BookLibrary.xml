<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BookLibrary</name>
    </assembly>
    <members>
        <member name="T:BookLibrary.Book">
            <summary>
            This class represents a book which has properties such as name of author, title of the book, publish date and price.
            </summary>
        </member>
        <member name="P:BookLibrary.Book.Author">
            <summary>
            This property returns name the author of the book.
            </summary>
        </member>
        <member name="P:BookLibrary.Book.Title">
            <summary>
            This property returns title of the book.
            </summary>
        </member>
        <member name="P:BookLibrary.Book.PublishDate">
            <summary>
            This property returns book's publish day.
            </summary>
        </member>
        <member name="P:BookLibrary.Book.Price">
            <summary>
            This property returns price of the book.
            </summary>
        </member>
        <member name="F:BookLibrary.Book.author">
            <summary>
            Name the author of the book.
            </summary>
        </member>
        <member name="F:BookLibrary.Book.title">
            <summary>
            Title of the book.
            </summary>
        </member>
        <member name="F:BookLibrary.Book.publishDate">
            <summary>
            Book's publish date.
            </summary>
        </member>
        <member name="F:BookLibrary.Book.price">
            <summary>
            Price of the book.
            </summary>
        </member>
        <member name="M:BookLibrary.Book.#ctor">
            <summary>
            Default constructor which calls another constructor with parameters.
            </summary>
        </member>
        <member name="M:BookLibrary.Book.#ctor(System.String,System.String,System.String,System.Double)">
            <summary>
            Constructor with parameters.
            </summary>
            <param name="authorName">Name the author of the book.</param>
            <param name="bookTitle">Title of the book.</param>
            <param name="bookPublishDate">Book's publish day.</param>
            <param name="bookPrice">Price of the book.</param>
        </member>
        <member name="M:BookLibrary.Book.Equals(BookLibrary.Book)">
            <summary>
            This method compares current book to another one. Returns true if they are the same.
            </summary>
            <param name="other">Another book for comparison.</param>
            <returns>Returns true if they are the same. Returns false if the aren't equal.</returns>
        </member>
        <member name="M:BookLibrary.Book.Equals(System.Object)">
            <summary>
            This method compares current book and another object. If object can be cast to Book type then calls Equals method with parameter type of Book.
            </summary>
            <param name="obj">Instance of Object.</param>
            <returns>Return false if objects aren't equal.</returns>
        </member>
        <member name="M:BookLibrary.Book.CompareTo(BookLibrary.Book)">
            <summary>
            This method compare current book to another one by publish date.
            </summary>
            <param name="other">Another book for comparison.</param>
            <returns>Returns 0 if these books were published at the same time. Returns -1 if current book was published earlier then another one.</returns>
        </member>
        <member name="M:BookLibrary.Book.CompareTo(System.Object)">
            <summary>
            This method compare current book to an object.
            </summary>
            <param name="obj">Instance of System.Object</param>
        </member>
        <member name="M:BookLibrary.Book.ToString">
            <summary>
            This method returns formated string with information about book such as name the author, title of the book, book's publish date, price of the book.
            </summary>
        </member>
        <member name="M:BookLibrary.Book.GetHashCode">
            <summary>
            This method returns hash code of string which represents book instance.
            </summary>
            <returns>Returns hash code.</returns>
        </member>
    </members>
</doc>
